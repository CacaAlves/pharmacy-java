CREATE DATABASE pharmacy_database;

use pharmacy_database;

CREATE TABLE Insumo (
    insumo_id INT AUTO_INCREMENT,
    nome varchar(30) NOT NULL,
    tipo VARCHAR(10) NOT NULL,
    portaria FLOAT,
    fator_equivalencia DOUBLE,
    fator_correcao DOUBLE,
    dcb INT, 
    bula_path VARCHAR(34), 
    margem_lucro_desejada FLOAT,
    dosagem_min FLOAT,
    dosagem_max FLOAT,
    quantidade_estoque DOUBLE DEFAULT 0.0,
    ponto_compra FLOAT,
    PRIMARY KEY (insumo_id)
);

CREATE TABLE Insumo_Sinonimo (
    insumo_id INT,
    sinonimo VARCHAR(15),
    PRIMARY KEY (insumo_id, sinonimo),
    FOREIGN KEY (insumo_id) REFERENCES Insumo(insumo_id) ON DELETE CASCADE
);

CREATE TABLE Insumos_Nao_Combinaveis (
    insumo_id_1 INT,
    insumo_id_2 INT,
    PRIMARY KEY (insumo_id_1, insumo_id_2),
    FOREIGN KEY (insumo_id_1) REFERENCES Insumo(insumo_id) ON DELETE CASCADE,
    FOREIGN KEY (insumo_id_2) REFERENCES Insumo(insumo_id) ON DELETE CASCADE
);

CREATE TABLE Fornecedor (
    cnpj VARCHAR(25),
    razao_social VARCHAR(30) NOT NULL,
    inscricao_estadual VARCHAR(25),
    email VARCHAR(50),
    endereco VARCHAR(30),
    logradouro_tipo VARCHAR(15),
    numero_endereco VARCHAR(5),
    cep_endereco VARCHAR(15),
    PRIMARY KEY (cnpj)
);

CREATE TABLE Fornecedor_Telefone (  
    telefone VARCHAR(18),
    fornecedor_cnpj VARCHAR(25),
    nome_pessoa_contato VARCHAR(30),
    PRIMARY KEY (telefone, fornecedor_cnpj),
    FOREIGN KEY (fornecedor_cnpj) REFERENCES Fornecedor(cnpj) ON DELETE CASCADE
);

CREATE TABLE Ordem_Compra (
    numero_ordem_compra INT AUTO_INCREMENT,
    data_compra DATE,
    data_entrega DATE,
    condicao_pagamento VARCHAR(25),
    fornecedor_cnpj VARCHAR(25),
    PRIMARY KEY (numero_ordem_compra),
    FOREIGN KEY (fornecedor_cnpj) REFERENCES Fornecedor(cnpj)
);

CREATE TABLE Lote (
    lote_id INT AUTO_INCREMENT,
    quantidade DOUBLE,
    unidade_medida VARCHAR(10),
    lote FLOAT,
    validade_lote DATETIME,
    custo FLOAT,
    insumo_id INT,
    numero_ordem_compra INT,
    PRIMARY KEY (lote_id),
    FOREIGN KEY (insumo_id) REFERENCES Insumo(insumo_id),
    FOREIGN KEY (numero_ordem_compra) REFERENCES Ordem_Compra(numero_ordem_compra)
);

CREATE TABLE Medico (
    medico_id INT AUTO_INCREMENT,
    nome VARCHAR(30) NOT NULL,
    numero_registro VARCHAR(15) NOT NULL,
    email VARCHAR(50),
    numero_endereco VARCHAR(5),
    cep_endereco VARCHAR(15),
    logradouro_tipo VARCHAR(15),
    endereco VARCHAR(30),
    telefone VARCHAR(18),
    PRIMARY KEY (medico_id)
);

CREATE TABLE Formula (
    formula_id INT AUTO_INCREMENT,
    data_prescicao DATETIME NOT NULL,
    dose_path VARCHAR(13) NOT NULL,
    uso_prolongado BOOLEAN NOT NULL,
    medico_id INT,
    PRIMARY KEY (formula_id), 
    FOREIGN KEY (medico_id) REFERENCES Medico(medico_id)
);

CREATE TABLE Formula_Insumo (
    formula_id INT,
    insumo_id INT,
    quantidade FLOAT NOT NULL,
    unidade_medida VARCHAR(2),
    numero_notificacao VARCHAR(13),
    PRIMARY KEY (formula_id, insumo_id),
    FOREIGN KEY (formula_id) REFERENCES Formula(formula_id) ON DELETE CASCADE,
    FOREIGN KEY (insumo_id) REFERENCES Insumo(insumo_id)
);

CREATE TABLE Vendedor (
    numero_rg VARCHAR(15),
    nome VARCHAR(30) NOT NULL,
    orgao_expedidor VARCHAR(9) NOT NULL,
    unidade_federativa_expedidora VARCHAR(2) NOT NULL,
    sexo VARCHAR(9) NOT NULL,
    data_nascimento DATETIME,
    data_ingresso_farmacia DATETIME,
    data_saida_farmacia DATETIME,
    numero_endereco VARCHAR(5),
    cep_endereco VARCHAR(15),
    logradouro_tipo VARCHAR(15),
    endereco VARCHAR(30),
    PRIMARY KEY (numero_rg)
);

CREATE TABLE Convenio_Medico(
    cnpj VARCHAR(25),
    nome VARCHAR(30) NOT NULL,
    telefone VARCHAR(18) NOT NULL,
    nome_contato_telefone VARCHAR(18) NOT NULL,
    inscricao_estadual VARCHAR(25),
    percentual_desconto FLOAT NOT NULL,
    numero_endereco VARCHAR(5),
    cep_endereco VARCHAR(15),
    logradouro_tipo VARCHAR(15),
    endereco VARCHAR(30),
    PRIMARY KEY (cnpj)
);

CREATE TABLE Cliente (
    numero_rg VARCHAR(15),
    orgao_expedidor VARCHAR(9) NOT NULL,
    unidade_federativa_expedidora VARCHAR(2) NOT NULL,
    nome VARCHAR(30) NOT NULL,
    telefone VARCHAR(18),
    email VARCHAR(50),
    sexo VARCHAR(9),
    data_nascimento DATETIME,
    convenio_cnpj VARCHAR(25),
    PRIMARY KEY (numero_rg),
    FOREIGN KEY (convenio_cnpj) REFERENCES Convenio_Medico(cnpj)
);


CREATE TABLE Venda (
    venda_id INT AUTO_INCREMENT,
    data_venda DATETIME,
    cliente_numero_rg VARCHAR(15),
    vendedor_numero_rg VARCHAR(15),
    PRIMARY KEY (venda_id),
    FOREIGN KEY (cliente_numero_rg) REFERENCES Cliente(numero_rg),
    FOREIGN KEY (vendedor_numero_rg) REFERENCES Vendedor(numero_rg)
);

CREATE TABLE Venda_Formula (
    venda_id INT,
    formula_id INT,
    PRIMARY KEY (venda_id, formula_id),
    FOREIGN KEY (venda_id) REFERENCES Venda(venda_id),
    FOREIGN KEY (formula_id) REFERENCES Formula(formula_id)
);

DELIMITER $
    CREATE TRIGGER Ordem_Compra_Date_Automatica BEFORE INSERT
    ON Ordem_Compra
    FOR EACH ROW
    BEGIN
        SET NEW.data_compra = NOW();
    END$
DELIMITER ;

DELIMITER $
    CREATE TRIGGER Venda_Date_Automatica BEFORE INSERT
    ON Venda
    FOR EACH ROW
    BEGIN
        SET NEW.data_venda = NOW();
    END$
DELIMITER ;

DELIMITER $
    CREATE TRIGGER Estoque_Incremento AFTER INSERT
    ON Lote
    FOR EACH ROW
    BEGIN
        UPDATE Insumo SET quantidade_estoque = quantidade_estoque + NEW.quantidade 
        WHERE insumo_id = NEW.insumo_id;
    END$
DELIMITER ;
